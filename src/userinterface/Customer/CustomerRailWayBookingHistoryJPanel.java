/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Customer;

import Business.*;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CustomerOrganization;
import Business.Organization.Organization;
import Business.Organization.RailWayOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RailWayWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chenweikai
 */
public class CustomerRailWayBookingHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerRailWayBookingHistoryJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    private CustomerOrganization customerOrganization;
    public CustomerRailWayBookingHistoryJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.system = business;
        this.customerOrganization = (CustomerOrganization)organization;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableBooking = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        tableBooking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "RailWay ID", "RailWay Number", "Departure", "Arrival", "price", "Merchant", "Merchant Message", "Status"
            }
        ));
        jScrollPane1.setViewportView(tableBooking);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("CUSTOMER BOOKING HISTORY");

        backBtn.setText("<<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        btnCancel.setText("Request to Cancel >>>");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Airliner/chakan.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Airliner/quxiao.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 596, Short.MAX_VALUE)
                                .addComponent(btnCancel))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(jLabel2)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel1)))
                .addGap(79, 79, 79))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backBtn)
                            .addComponent(jLabel3))
                        .addContainerGap(87, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addGap(102, 102, 102))))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    public void populateTable(){
        
        int rowCount = tableBooking.getRowCount();
        DefaultTableModel model = (DefaultTableModel)tableBooking.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        System.out.println("orderhistory: " + userAccount.getCustomerRailWayBooking().size() + ", work request: " + userAccount.getWorkQueue().getWorkRequestList().size());
        int cnt = 0;
        if (userAccount.getCustomerRailWayBooking().size() == 0){
            return;
        }
        
        
        for (WorkRequest request : userAccount.getWorkQueue().getRequestMap().get("RailWay")){
            Object row[] = new Object[8];
            //System.out.println("History panel: " + userAccount.getCustomerRailWayBooking().size());
            row[0] = userAccount.getCustomerRailWayBooking().get(cnt);
            row[1] = userAccount.getCustomerRailWayBooking().get(cnt).getRailwayNum();
            row[2] = userAccount.getCustomerRailWayBooking().get(cnt).getDeparture();
            row[3] = userAccount.getCustomerRailWayBooking().get(cnt).getArrival();
            if (request.getPriceChange()){
                row[4] = request.getPrice();
            }
            else{
                row[4] = userAccount.getCustomerRailWayBooking().get(cnt).getPrice();
            }
            row[5] = request.getReceiver().getEmployee().getName();
            row[6] = request.getMessage();
            row[7] = request.getStatus();
            
            model.addRow(row);
            cnt++;
        }
    }
    
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
       int row = tableBooking.getSelectedRow();
        if (row<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        RailWay railway = (RailWay)tableBooking.getValueAt(row, 0);
        RailWayWorkRequest railwayRequest = new RailWayWorkRequest();
        railwayRequest.setIsCancellation(true);
        railwayRequest.setMessage("I want to canel order");
        railwayRequest.setSender(userAccount);
        UserAccount ua = null;
         for (Network network : system.getNetworkList()){
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                if (enterprise.getName().equals(customerOrganization.getEnterpriseName())){
                    System.out.println("CusHis: " + enterprise.getName() + "cusOrg: " + customerOrganization.getEnterpriseName());
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                        if (organization instanceof RailWayOrganization){
                            for (UserAccount u : organization.getUserAccountDirectory().getUserAccountList()){
                                if (u.getEmployee().getName().equals(railway.getCompanyName())){

                                    ua = u;
                                    break;
                                }
                            }
                        }
                    }
                }
                
            }
         }
         if (ua != null){
             System.out.println("ua = null?");
             railwayRequest.setRow(row);
             railwayRequest.setReceiver(ua);
             railwayRequest.setStatus("Requested");
             railwayRequest.setIsCancellation(true);
             ua.getWorkQueue().getWorkRequestList().add(railwayRequest);
             tableBooking.setValueAt("Cancellation Requested", row, 6);
         }
        JOptionPane.showMessageDialog(null, "Your cancellation request has been sent!", "Warning", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton btnCancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableBooking;
    // End of variables declaration//GEN-END:variables
}
