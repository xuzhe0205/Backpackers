    /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Customer;

import Business.EcoSystem;
import Business.*;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CustomerOrganization;
import Business.Organization.HotelOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HotelWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chenweikai
 */
public class CustomerHotelBookingHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerHotelBookingHistoryJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    private CustomerOrganization customerOrganization;
    private String bookedDate;
    public CustomerHotelBookingHistoryJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business, String bookedDate) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.system = business;
        this.customerOrganization = (CustomerOrganization)organization;
        //System.out.println(customerOrganization.getEnterpriseName());
        populateTable();
        this.bookedDate = bookedDate;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tableOrderHistory1 = new javax.swing.JTable();
        backBtn1 = new javax.swing.JButton();
        btnCancel1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableBooking = new javax.swing.JTable();
        backBtn2 = new javax.swing.JButton();
        btnCancel2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        tableOrderHistory1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Hotel ID", "Hotel Name", "Room Numbers", "Location", "Price", "Stars", "Parking Lot", "Wifi"
            }
        ));
        jScrollPane2.setViewportView(tableOrderHistory1);

        backBtn1.setText("<<< Back");
        backBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtn1ActionPerformed(evt);
            }
        });

        btnCancel1.setText("Request to Cancel >>>");
        btnCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancel1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("HOTEL BOOKING HISTORY");

        tableBooking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Hotel ID", "Hotel Name", "Location", "Price", "Merchant", "Merchant Message", "Status", "Room Numbers"
            }
        ));
        jScrollPane3.setViewportView(tableBooking);

        backBtn2.setText("<<< Back");
        backBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtn2ActionPerformed(evt);
            }
        });

        btnCancel2.setText("Request to Cancel >>>");
        btnCancel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancel2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("HOTEL BOOKING HISTORY");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/AdministrativeRole/jiudian.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Airliner/chakan.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Customer/quxiao.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backBtn2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(39, 39, 39)
                                .addComponent(btnCancel2))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(jLabel4)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)
                        .addGap(57, 57, 57)
                        .addComponent(jLabel3)))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel1)))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel2)
                    .addComponent(backBtn2)
                    .addComponent(jLabel5))
                .addContainerGap(165, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

     public void populateTable(){
        
        int rowCount = tableBooking.getRowCount();
        DefaultTableModel model = (DefaultTableModel)tableBooking.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        System.out.println("orderhistory: " + userAccount.getCustomerBooking().size() + ", work request: " + userAccount.getWorkQueue().getRequestMap().get("Hotel").size());
        int cnt = 0;
       
        System.out.println("hotelhistory: "+userAccount.getCustomerBooking().size());
        if (userAccount.getCustomerBooking().size() == 0){
          return;
        }
        
          System.out.println("useraccount booking size"+userAccount.getCustomerBooking().size());
        for (WorkRequest request : userAccount.getWorkQueue().getRequestMap().get("Hotel")){
            Object row[] = new Object[8];
            row[0] = userAccount.getCustomerBooking().get(cnt);
            row[1] = userAccount.getCustomerBooking().get(cnt).getName();
            row[2] = userAccount.getCustomerBooking().get(cnt).getLocation();
            if (request.getPriceChange()){
                row[3] = request.getPrice();
            }
            else{
                row[3] = userAccount.getCustomerBooking().get(cnt).getPrice();
            }
            
            row[4] = request.getReceiver().getEmployee().getName();
            row[5] = request.getMessage();
            row[6] = request.getStatus();
            row[7] = userAccount.getCustomerBooking().get(cnt).getRoomnumbers();
            //labelCheckindate.setText(userAccount.getCustomerBooking().get(cnt).getBookedDate());
            model.addRow(row);
            cnt++;
            
        }
    }
    
    private void backBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtn1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtn1ActionPerformed

    private void btnCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancel1ActionPerformed
        // TODO add your handling code here:
        int row = tableBooking.getSelectedRow();
        if (row<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Hotel hotel = (Hotel)tableBooking.getValueAt(row, 0);
        HotelWorkRequest hotelRequest = new HotelWorkRequest();
        hotelRequest.setIsCancellation(true);
        hotelRequest.setPrice((Double)tableBooking.getValueAt(row, 3));
        hotelRequest.setMessage("I want to canel order");
        hotelRequest.setSender(userAccount);
        UserAccount ua = null;
        for (Network network : system.getNetworkList()){
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                if (enterprise.getName().equals(customerOrganization.getEnterpriseName())){
                    System.out.println("CusHis: " + enterprise.getName() + "cusOrg: " + customerOrganization.getEnterpriseName());
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                        if (organization instanceof HotelOrganization){
                            for (UserAccount u : organization.getUserAccountDirectory().getUserAccountList()){
                                if (u.getEmployee().getName().equals(hotel.getName())){

                                    ua = u;
                                    break;
                                }
                            }
                        }
                    }
                }

            }
        }
        if (ua != null){
            //System.out.println("ua = null?");
            hotelRequest.setRow(row);
            hotelRequest.setReceiver(ua);
            hotelRequest.setStatus("Requested");
            hotelRequest.setIsCancellation(true);
            ua.getWorkQueue().getWorkRequestList().add(hotelRequest);
            tableBooking.setValueAt("Cancellation Requested", row, 6);
        }
        JOptionPane.showMessageDialog(null, "Your cancellation request has been sent!", "Warning", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnCancel1ActionPerformed

    private void backBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtn2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtn2ActionPerformed

    private void btnCancel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancel2ActionPerformed
        // TODO add your handling code here:
       int row = tableBooking.getSelectedRow();
        if (row<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Hotel hotel = (Hotel)tableBooking.getValueAt(row, 0);
        HotelWorkRequest hotelRequest = new HotelWorkRequest();
        hotelRequest.setIsCancellation(true);
        hotelRequest.setMessage("I want to cancel order");
        hotelRequest.setSender(userAccount);
        UserAccount ua = null;
        for (Network network : system.getNetworkList()){
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                if (enterprise.getName().equals(customerOrganization.getEnterpriseName())){
                    System.out.println("CusHis: " + enterprise.getName() + "cusOrg: " + customerOrganization.getEnterpriseName());
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                        if (organization instanceof HotelOrganization){
                            for (UserAccount u : organization.getUserAccountDirectory().getUserAccountList()){
                                if (u.getEmployee().getName().equals(hotel.getName())){

                                    ua = u;
                                    break;
                                }
                            }
                        }
                    }
                }

            }
        }
        if (ua != null){
            //System.out.println("ua = null?");
            hotelRequest.setRow(row);
            hotelRequest.setReceiver(ua);
            hotelRequest.setStatus("Requested");
            hotelRequest.setIsCancellation(true);
            ua.getWorkQueue().getWorkRequestList().add(hotelRequest);
            tableBooking.setValueAt("Cancellation Requested", row, 6);
        }
        JOptionPane.showMessageDialog(null, "Your cancellation request has been sent!", "Warning", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnCancel2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn1;
    private javax.swing.JButton backBtn2;
    private javax.swing.JButton btnCancel1;
    private javax.swing.JButton btnCancel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tableBooking;
    private javax.swing.JTable tableOrderHistory1;
    // End of variables declaration//GEN-END:variables
}
